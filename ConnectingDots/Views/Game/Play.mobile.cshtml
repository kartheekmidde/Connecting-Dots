@model ConnectingDots.Models.GameViewModel
@{
    var areThereGames = Model.AllGames.Any();
}
<script src="http://code.jquery.com/jquery-latest.min.js" type="text/javascript"></script>
<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&key=AIzaSyD_r1iAegOuFVUvvEDsVACcx6EOgRJx-AI&libraries=places" async defer></script>


<br /><br />
<div>
    <table id="resultsTablePlay" class="table table-condensed table-responsive">
            @foreach (var game in Model.AllGames)
            {
                Html.RenderPartial("_playResult", game);
            }
    </table>
</div>

<br />
<div id="map" style="border:double"></div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <style>
        #map {
            height: 300px;
        }
    </style>

    <script>

        $(document).ready(function () {
            var audio = new Audio('../../Images/busy.wav');
            audio.play();

            getLocations();
            if ((s1_stat.localeCompare("notFound") == 0) ||
                        (s2_stat.localeCompare("notFound") == 0) ||
                        (s3_stat.localeCompare("notFound") == 0) ||
                        (s4_stat.localeCompare("notFound") == 0) ||
                        (s5_stat.localeCompare("notFound") == 0) ||
                        (s6_stat.localeCompare("notFound") == 0)) {
                initMap();
            } else {

            }
        });

        var i = setInterval(initMap, 10000);

        function distance(lat1, lon1, lat2, lon2){
            var R = 6371; // Radius of the earth in km
            var dLat = deg2rad(lat2 - lat1);  // deg2rad below
            var dLon = deg2rad(lon2 - lon1);
            var a = Math.sin(dLat/2) * Math.sin(dLat/2) + Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * Math.sin(dLon/2) * Math.sin(dLon/2) ;
            var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
            var d = R * c; // Distance in km
            return d;
        }

        function getLocations() {
            loc_id = document.getElementById('loc_id').innerText;

            s1_lat = document.getElementById('1_lat').innerText;
            s1_lon = document.getElementById('1_lon').innerText;
            s1_add = document.getElementById('1_add').innerText;

            s2_lat = document.getElementById('2_lat').innerText;
            s2_lon = document.getElementById('2_lon').innerText;
            s2_add = document.getElementById('2_add').innerText;

            s3_lat = document.getElementById('3_lat').innerText;
            s3_lon = document.getElementById('3_lon').innerText;
            s3_add = document.getElementById('3_add').innerText;
            s4_lat = document.getElementById('4_lat').innerText;
            s4_lon = document.getElementById('4_lon').innerText;
            s4_add = document.getElementById('4_add').innerText;

            s5_lat = document.getElementById('5_lat').innerText;
            s5_lon = document.getElementById('5_lon').innerText;
            s5_add = document.getElementById('5_add').innerText;

            s6_lat = document.getElementById('6_lat').innerText;
            s6_lon = document.getElementById('6_lon').innerText;
            s6_add = document.getElementById('6_add').innerText;

            proximity = 0.5;


            s1_stat = document.getElementById('1_stat').innerText;
            s2_stat = document.getElementById('2_stat').innerText;
            s3_stat = document.getElementById('3_stat').innerText;
            s4_stat = document.getElementById('4_stat').innerText;
            s5_stat = document.getElementById('5_stat').innerText;
            s6_stat = document.getElementById('6_stat').innerText;

            }


        function initMap() {
            var map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: -34.397, lng: 150.644 },
                zoom: 12
            });

            if (Modernizr.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    var pos = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };

                    var my_lat = position.coords.latitude;
                    var my_lon = position.coords.longitude;

                    map.setCenter(pos);

                    var im = 'http://maps.google.com/mapfiles/ms/micons/blue-dot.png';
                    var marker = new google.maps.Marker({ map: map, animation: google.maps.Animation.BOUNCE });

                    marker.setPosition(pos)
                    marker.setIcon(im);
                    var InfoWindowContent = [];


                    if ((s1_stat != null) && (s2_stat != null) && (s3_stat != null) && (s4_stat != null) && (s5_stat != null) && (s6_stat != null)) {

                        if ((s1_stat.localeCompare("notFound") == 0) ||
                            (s2_stat.localeCompare("notFound") == 0) ||
                            (s3_stat.localeCompare("notFound") == 0) ||
                            (s4_stat.localeCompare("notFound") == 0) ||
                            (s5_stat.localeCompare("notFound") == 0) ||
                            (s6_stat.localeCompare("notFound") == 0)) {
                            if (s1_stat.localeCompare("notFound") == 0){
                                if (distance(s1_lat, s1_lon, my_lat, my_lon) < proximity) {
                                    updateItem(loc_id, 1);
                                    s1_stat = "Found";
                                    document.getElementById('1_stat').innerHTML = "Found";
                                }
                            }
                            if (s2_stat.localeCompare("notFound") == 0) {
                                if (distance(s2_lat, s2_lon, my_lat, my_lon) < proximity) {
                                    updateItem(loc_id, 2);
                                    s2_stat = "Found";
                                    document.getElementById('2_stat').innerHTML = "Found";
                                }
                            }
                            if (s3_stat.localeCompare("notFound") == 0) {
                                if (distance(s3_lat, s3_lon, my_lat, my_lon) < proximity) {
                                    updateItem(loc_id, 3);
                                    s3_stat = "Found";
                                    document.getElementById('3_stat').innerHTML = "Found";
                                }
                            }
                            if (s4_stat.localeCompare("notFound") == 0) {
                                if (distance(s4_lat, s4_lon, my_lat, my_lon) < proximity) {
                                    updateItem(loc_id, 4);
                                    s4_stat = "Found";
                                    document.getElementById('4_stat').innerHTML = "Found";
                                }
                            }
                            if (s5_stat.localeCompare("notFound") == 0) {
                                if (distance(s5_lat, s5_lon, my_lat, my_lon) < proximity) {
                                    updateItem(loc_id, 5);
                                    s5_stat = "Found";
                                    document.getElementById('5_stat').innerHTML = "Found";
                                }
                            }
                            if (s6_stat.localeCompare("notFound") == 0) {
                                if (distance(s6_lat, s6_lon, my_lat, my_lon) < 0.5) {
                                    updateItem(loc_id, 6);
                                    s6_stat = "Found";
                                    document.getElementById('6_stat').innerHTML = "Found";
                                }
                            }

                            if (s1_stat.localeCompare("notFound") == 0) {
                                var loc = new google.maps.LatLng(s1_lat, s1_lon, false);
                                marker = new google.maps.Marker({ map: map, position: loc, animation: google.maps.Animation.DROP, label: '1' });
                                InfoWindowContent[1] = 's1_add';
                                attachDisplayMessage(marker, InfoWindowContent[1]);
                            }
                            if (s2_stat.localeCompare("notFound") == 0) {
                                var loc = new google.maps.LatLng(s2_lat, s2_lon, false);
                                marker = new google.maps.Marker({ map: map, position: loc, animation: google.maps.Animation.DROP, label: '2' });
                                InfoWindowContent[1] = 's2_add';
                                attachDisplayMessage(marker, InfoWindowContent[1]);
                            }
                            if (s3_stat.localeCompare("notFound") == 0) {
                                var loc = new google.maps.LatLng(s3_lat, s3_lon, false);
                                marker = new google.maps.Marker({ map: map, position: loc, animation: google.maps.Animation.DROP, label: '3' });
                                InfoWindowContent[1] = 's3_add';
                                attachDisplayMessage(marker, InfoWindowContent[1]);
                            }
                            if (s4_stat.localeCompare("notFound") == 0) {
                                var loc = new google.maps.LatLng(s4_lat, s4_lon, false);
                                marker = new google.maps.Marker({ map: map, position: loc, animation: google.maps.Animation.DROP, label: '4' });
                                InfoWindowContent[1] = 's4_add';
                                attachDisplayMessage(marker, InfoWindowContent[1]);
                            }
                            if (s5_stat.localeCompare("notFound") == 0) {
                                var loc = new google.maps.LatLng(s5_lat, s5_lon, false);
                                marker = new google.maps.Marker({ map: map, position: loc, animation: google.maps.Animation.DROP, label: '5' });
                                InfoWindowContent[1] = 's5_add';
                                attachDisplayMessage(marker, InfoWindowContent[1]);
                            }
                            if (s6_stat.localeCompare("notFound") == 0) {
                                var loc = new google.maps.LatLng(s6_lat, s6_lon, false);
                                marker = new google.maps.Marker({ map: map, position: loc, animation: google.maps.Animation.DROP, label: '6' });
                                InfoWindowContent[1] = 's6_add';
                                attachDisplayMessage(marker, InfoWindowContent[1]);
                            }
                        }
                    }
                }, function () {
                    handleLocationError(true, infoWindow, map.getCenter());
                });
            } else {
                // Browser doesn't support Geolocation
                handleLocationError(false, infoWindow, map.getCenter());
            }
        }


        function deg2rad(deg) {
            return deg * (Math.PI/180)
        }

        function updateItem(Id,stop) {

            var event = {
                Id: Id,
                stop: stop
            };

            $.ajax({
                url: "/Game/updateStop/",
                dataType: 'json',
                contentType: 'application/json',
                data: JSON.stringify(event),
                type: 'POST',
                success: function () {
                    location.reload();
                    var audio = new Audio('../../Images/found.wav');
                    audio.play();
                },
                error: function (xhr, status, error) {
                    console.log("Error in adding event.");
                }
            });
        }

        function attachDisplayMessage(marker, displayMessage) {
            var infowindow = new google.maps.InfoWindow({
                content: displayMessage
            });
            marker.addListener('click', function() {
                infowindow.open(marker.get('map'), marker);
            });
        }

        function handleLocationError(browserHasGeolocation, infoWindow, pos) {
            infoWindow.setPosition(pos);
            infoWindow.setContent(browserHasGeolocation ?
                                  'Error: The Geolocation service failed.' :
                                  'Error: Your browser doesn\'t support geolocation.');
        }

        function showError(error) {
            switch(error.code) {
                case error.PERMISSION_DENIED:
                    alert("User denied the request for Geolocation.");
                    break;
                case error.POSITION_UNAVAILABLE:
                    alert("Location information is unavailable.");
                    break;
                case error.TIMEOUT:
                    alert("The request to get user location timed out.");
                    break;
                case error.UNKNOWN_ERROR:
                    alert("An unknown error occurred.");
                    break;
            }
        }

    </script>
}




